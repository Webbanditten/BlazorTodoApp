@namespace BlazorApp.Components.TodoItem
@using BlazorApp.Models;

<div>
  <input class="hidden" @onchange="ToggleCompletion" checked="@(Metadata.IsDone ? "checked" : null)" type="checkbox"
    id="task_@Id">
  <label class="flex items-center h-10 px-2 rounded cursor-pointer hover:bg-gray-100" for="task_@Id">
    <span class="flex items-center justify-center w-5 h-5 text-transparent border-2 border-gray-300 rounded-full">
      <svg class="w-4 h-4 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd"
          d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
          clip-rule="evenodd" />
      </svg>
    </span>
    <span class="ml-4 text-sm">@Id - @Title </span>
  </label>
  @{
    if (Metadata.CompletedAt != null)
    {
      <span class="ml-4 text-xs text-gray-400">Completed at @Metadata.CompletedAt?.ToString("dd-mm-yyyy HH:mm:ss")</span>
    }
  }
</div>
@code {

  [Parameter]
  public int Id { get; set; } = 0;

  [Parameter]
  public string Title { get; set; } = "You got a job todo";

  [Parameter]
  public TodoListItemMetadata Metadata { get; set; } =
  new()
    {
      CreatedAt = DateTime.Now,
      IsDone = false,
    };

  private void ToggleCompletion()
  {
    Console.WriteLine("Toggling completion");
    var newIsDone = !Metadata.IsDone;
    Metadata.IsDone = newIsDone;

    if (Metadata.IsDone)
    {
      Console.WriteLine("Setting completed at " + DateTime.Now.ToString("dd-mm-yyyy HH:mm:ss"));
      Metadata.CompletedAt = DateTime.Now;
    }
    else
    {
      Console.WriteLine("Setting completed at to null");
      Metadata.CompletedAt = null;
    }
  }
}
